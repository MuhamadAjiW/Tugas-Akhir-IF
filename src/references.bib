@techreport{minio2022erasure,
	author      = {MinIO},
	title       = {Erasure Coding Primer},
	institution = {MinIO inc.},
	year        = {2022},
	type        = {White Paper},
	address     = {530B University Avenue, Palo Alto, CA 94301}
}

@inproceedings{silberstein2014lazy,
	title     = {Lazy means smart: Reducing repair bandwidth costs in erasure-coded distributed storage},
	author    = {Silberstein, Mark and Ganesh, Lakshmi and Wang, Yang and Alvisi, Lorenzo and Dahlin, Mike},
	booktitle = {Proceedings of International Conference on Systems and Storage},
	pages     = {1--7},
	year      = {2014}
}

@article{manasse2009reed,
	title   = {A reed-solomon code for disk storage, and efficient recovery computations for erasure-coded disk storage},
	author  = {Manasse, M and Thekkath, C and Silverberg, A},
	journal = {Proceeding in Informatics},
	pages   = {1--11},
	year    = {2009}
}

@inproceedings{huang2012erasure,
	title     = {Erasure coding in windows azure storage},
	author    = {Huang, Cheng and Simitci, Huseyin and Xu, Yikang and Ogus, Aaron and Calder, Brad and Gopalan, Parikshit and Li, Jin and Yekhanin, Sergey},
	booktitle = {2012 USENIX Annual Technical Conference (USENIX ATC 12)},
	pages     = {15--26},
	year      = {2012}
}

@article{kim2021erasure,
	title     = {Erasure-coding-based storage and recovery for distributed exascale storage systems},
	author    = {Kim, Jeong-Joon},
	journal   = {Applied Sciences},
	volume    = {11},
	number    = {8},
	pages     = {3298},
	year      = {2021},
	publisher = {MDPI}
}

@inproceedings{weatherspoon2002erasure,
	title        = {Erasure coding vs. replication: A quantitative comparison},
	author       = {Weatherspoon, Hakim and Kubiatowicz, John D},
	booktitle    = {International Workshop on Peer-to-Peer Systems},
	pages        = {328--337},
	year         = {2002},
	organization = {Springer}
}

@article{katz2010raid,
	title     = {Raid: A personal recollection of how storage became a system},
	author    = {Katz, Randy H},
	journal   = {IEEE Annals of the History of Computing},
	volume    = {32},
	number    = {4},
	pages     = {82--87},
	year      = {2010},
	publisher = {IEEE}
}

@misc{forney2005finitefields,
	title        = {Principles of Digital Communication II},
	author       = {David Forney},
	year         = {2006},
	howpublished = {https://ocw.mit.edu/courses/6-451-principles-of-digital-communication-ii-spring-2005/resources/lecture-videos/},
	note         = {Accessed: 2024-11-03}
}

@misc{maggs2010reed,
	title        = {Reed-Solomon Codes},
	author       = {Bruce Maggs},
	year         = {2010},
	howpublished = {https://courses.cs.duke.edu/spring10/cps296.3/rs_scribe.pdf},
	note         = {Accessed: 2024-11-02}
}

@misc{riley2001introduction,
	title     = {An introduction to Reed-Solomon codes: principles, architecture and implementation},
	author    = {Riley, Martyn and Richardson, Iain},
	year      = {2001},
	publisher = {Prentice-hall}
}

@article{reed1960polynomial,
	title     = {Polynomial codes over certain finite fields},
	author    = {Reed, Irving S and Solomon, Gustave},
	journal   = {Journal of the society for industrial and applied mathematics},
	volume    = {8},
	number    = {2},
	pages     = {300--304},
	year      = {1960},
	publisher = {SIAM}
}

@misc{goodwin2023latency,
	title        = {What is Latency?},
	author       = {Michael Goodwin},
	howpublished = {https://www.ibm.com/topics/latency},
	year         = {2023},
	month        = {8},
	publisher    = {IBM}
}

@book{halliday2013fundamentals,
	title     = {Fundamentals of physics},
	author    = {Halliday, David and Resnick, Robert and Walker, Jearl},
	year      = {2013},
	publisher = {John Wiley \& Sons}
}

@article{dean2013tail,
	title     = {The tail at scale},
	author    = {Dean, Jeffrey and Barroso, Luiz Andr{\'e}},
	journal   = {Communications of the ACM},
	volume    = {56},
	number    = {2},
	pages     = {74--80},
	year      = {2013},
	publisher = {ACM New York, NY, USA}
}

@inproceedings{clapp2015quantifying,
	title        = {Quantifying the performance impact of memory latency and bandwidth for big data workloads},
	author       = {Clapp, Russell and Dimitrov, Martin and Kumar, Karthik and Viswanathan, Vish and Willhalm, Thomas},
	booktitle    = {2015 IEEE International Symposium on Workload Characterization},
	pages        = {213--224},
	year         = {2015},
	organization = {IEEE}
}

@book{hennessy2011computer,
	title     = {Computer architecture: a quantitative approach},
	author    = {Hennessy, John L and Patterson, David A},
	year      = {2011},
	publisher = {Elsevier}
}

@book{jacob2010memory,
	title     = {Memory systems: cache, DRAM, disk},
	author    = {Jacob, Bruce and Wang, David and Ng, Spencer},
	year      = {2010},
	publisher = {Morgan Kaufmann}
}

@article{ng1991improving,
	title     = {Improving disk performance via latency reduction},
	author    = {Ng, Spencer W.},
	journal   = {IEEE Transactions on Computers},
	volume    = {40},
	number    = {01},
	pages     = {22--30},
	year      = {1991},
	publisher = {IEEE Computer Society}
}

@inbook{sammes2000disk,
	author = {Sammes, A. and Jenkinson, B.},
	year   = {2000},
	month  = {01},
	pages  = {89-173},
	title  = {Disk Geometry},
	isbn   = {978-1-85233-299-0},
	doi    = {10.1007/978-1-4471-3661-3_5}
}

@article{arpaci2018operating,
	title     = {Operating systems: Three easy pieces},
	author    = {Arpaci-Dusseau, Remzi H and Arpaci-Dusseau, Andrea C},
	year      = {2018},
	publisher = {Arpaci-Dusseau Books, LLC}
}

@article{johansson2000impact,
	title     = {On the impact of network latency on distributed systems design},
	author    = {Johansson, Jesper M},
	journal   = {Information Technology and Management},
	volume    = {1},
	pages     = {183--194},
	year      = {2000},
	publisher = {Springer}
}

@misc{kelechava2016storage,
	title        = {Increasing Computer Storage to Accomodate Data Growth},
	author       = {Brad Kelechava},
	howpublished = {https://blog.ansi.org/increasing-computer-storage-to/},
	year         = {2016},
	month        = {2},
	publisher    = {ANSI}
}

@article{balaji2018erasure,
	title     = {Erasure coding for distributed storage: An overview},
	author    = {Balaji, SB and Krishnan, M Nikhil and Vajha, Myna and Ramkumar, Vinayak and Sasidharan, Birenjith and Kumar, P Vijay},
	journal   = {Science China Information Sciences},
	volume    = {61},
	pages     = {1--45},
	year      = {2018},
	publisher = {Springer}
}

@inproceedings{chen2016towards,
	title        = {Towards scalable and reliable in-memory storage system: A case study with Redis},
	author       = {Chen, Shanshan and Tang, Xiaoxin and Wang, Hongwei and Zhao, Han and Guo, Minyi},
	booktitle    = {2016 IEEE Trustcom/BigDataSE/ISPA},
	pages        = {1660--1667},
	year         = {2016},
	organization = {IEEE}
}

@misc{mongo2024keyvalue,
	title  = {Key-Value Databases},
	author = {MongoDB},
	year   = {2024},
	note   = {Accessed: 2024-11-04}
}
% This breaks the latex formatter
% howpublished = {https://www.mongodb.com/resources/basics/databases/key-value-database#:~:text=Key%20value%20databases%2C%20also%20known,associated%20value%20with%20each%20key},

@article{gilbert2002brewer,
	title     = {Brewer's conjecture and the feasibility of consistent, available, partition-tolerant web services},
	author    = {Gilbert, Seth and Lynch, Nancy},
	journal   = {Acm Sigact News},
	volume    = {33},
	number    = {2},
	pages     = {51--59},
	year      = {2002},
	publisher = {ACM New York, NY, USA}
}

@inproceedings{nishtala2013scaling,
	author    = {Nishtala, Rajesh and Fugal, Hans and Grimm, Steven and Kwiatkowski, Marc and Lee, Herman and Li, Harry C. and McElroy, Ryan and Paleczny, Mike and Peek, Daniel and Saab, Paul and Stafford, David and Tung, Tony and Venkataramani, Venkateshwaran},
	title     = {Scaling Memcache at Facebook},
	year      = {2013},
	publisher = {USENIX Association},
	address   = {USA},
	abstract  = {Memcached is a well known, simple, in-memory caching solution. This paper describes how Facebook leverages memcached as a building block to construct and scale a distributed key-value store that supports the world's largest social network. Our system handles billions of requests per second and holds trillions of items to deliver a rich experience for over a billion users around the world.},
	booktitle = {Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation},
	pages     = {385â€“398},
	numpages  = {14},
	location  = {Lombard, IL},
	series    = {nsdi'13}
}

@manual{memcached_docs,
	title  = {Memcached Documentation},
	author = {{Memcached Developers}},
	year   = {2024},
	url    = {https://docs.memcached.org/},
	note   = {Accessed: 2024-12-17}
}

@inproceedings{yiu2017erasure,
	author    = {Yiu, Matt M. T. and Chan, Helen H. W. and Lee, Patrick P. C.},
	title     = {Erasure coding for small objects in in-memory KV storage},
	year      = {2017},
	isbn      = {9781450350358},
	publisher = {Association for Computing Machinery},
	address   = {New York, NY, USA},
	url       = {https://doi.org/10.1145/3078468.3078470},
	doi       = {10.1145/3078468.3078470},
	abstract  = {We present MemEC, an erasure-coding-based in-memory key-value (KV) store that achieves high availability and fast recovery while keeping low data redundancy across storage servers. MemEC is specifically designed for workloads dominated by small objects. By encoding objects in entirety, MemEC is shown to incur 60\% less storage redundancy for small objects than existing replication- and erasure-coding-based approaches. It also supports graceful transitions between decentralized requests in normal mode (i.e., no failures) and coordinated requests in degraded mode (i.e., with failures). We evaluate our MemEC prototype via testbed experiments under read-heavy and update-heavy YCSB workloads. We show that MemEC achieves high throughput and low latency in both normal and degraded modes, and supports fast transitions between the two modes.},
	booktitle = {Proceedings of the 10th ACM International Systems and Storage Conference},
	articleno = {14},
	numpages  = {12},
	keywords  = {in-memory storage, erasure coding},
	location  = {Haifa, Israel},
	series    = {SYSTOR '17}
}

@article{dong2021rocksdb,
	author     = {Dong, Siying and Kryczka, Andrew and Jin, Yanqin and Stumm, Michael},
	title      = {RocksDB: Evolution of Development Priorities in a Key-value Store Serving Large-scale Applications},
	year       = {2021},
	issue_date = {November 2021},
	publisher  = {Association for Computing Machinery},
	address    = {New York, NY, USA},
	volume     = {17},
	number     = {4},
	issn       = {1553-3077},
	url        = {https://doi.org/10.1145/3483840},
	doi        = {10.1145/3483840},
	abstract   = {This article is an eight-year retrospective on development priorities for RocksDB, a key-value store developed at Facebook that targets large-scale distributed systems and that is optimized for Solid State Drives (SSDs). We describe how the priorities evolved over time as a result of hardware trends and extensive experiences running RocksDB at scale in production at a number of organizations: from optimizing write amplification, to space amplification, to CPU utilization. We describe lessons from running large-scale applications, including that resource allocation needs to be managed across different RocksDB instances, that data formats need to remain backward- and forward-compatible to allow incremental software rollouts, and that appropriate support for database replication and backups are needed. Lessons from failure handling taught us that data corruption errors needed to be detected earlier and that data integrity protection mechanisms are needed at every layer of the system. We describe improvements to the key-value interface. We describe a number of efforts that in retrospect proved to be misguided. Finally, we describe a number of open problems that could benefit from future research.},
	journal    = {ACM Trans. Storage},
	month      = oct,
	articleno  = {26},
	numpages   = {32},
	keywords   = {Key-value stores, large-scale applications, RocksDB, SSD, compaction, databases}
}

@article{blomer1999xor,
	author = {Blomer, Johannes and Kalfane, Malik and Karp, Richard and Karpinski, Marek and Luby, Michael and Zuckerman, David},
	year   = {1999},
	month  = {10},
	title  = {An XOR-Based Erasure-Resilient Coding Scheme}
}

@article{gallagher1962ldpc,
	author   = {Gallager, R.},
	journal  = {IRE Transactions on Information Theory},
	title    = {Low-density parity-check codes},
	year     = {1962},
	volume   = {8},
	number   = {1},
	pages    = {21-28},
	keywords = {Parity check codes;Maximum likelihood decoding;Equations;Channel capacity;Information theory;Error probability;Linear approximation;Data communication;Error correction codes;Communication systems},
	doi      = {10.1109/TIT.1962.1057683}
}

@article{bose1960bch,
	title    = {On a class of error correcting binary group codes},
	journal  = {Information and Control},
	volume   = {3},
	number   = {1},
	pages    = {68-79},
	year     = {1960},
	issn     = {0019-9958},
	doi      = {https://doi.org/10.1016/S0019-9958(60)90287-4},
	url      = {https://www.sciencedirect.com/science/article/pii/S0019995860902874},
	author   = {R.C. Bose and D.K. Ray-Chaudhuri},
	abstract = {A general method of constructing error correcting binary group codes is obtained. A binary group code with n places, k of which are information places is called an (n,k) code. An explicit method of constructing t-error correcting (n,k) codes is given for n = 2mâˆ’1 and k = 2mâˆ’1âˆ’R(m,t) â‰§ 2mâˆ’1âˆ’mt where R(m,t) is a function of m and t which cannot exceed mt. An example is worked out to illustrate the method of construction.}
}

@article{asteris2014fountain,
	author   = {Asteris, Megasthenis and Dimakis, Alexandros G.},
	journal  = {IEEE Journal on Selected Areas in Communications},
	title    = {Repairable Fountain Codes},
	year     = {2014},
	volume   = {32},
	number   = {5},
	pages    = {1037-1047},
	keywords = {Systematics;Decoding;Availability;Sparse matrices;Bipartite graph;Maintenance engineering;Complexity theory;Systematic Fountain code;Logarithmic locality;Availability},
	doi      = {10.1109/JSAC.2014.140522}
}

@inproceedings{rashmi2012regenerating,
	author    = {Rashmi, K. V. and Shah, Nihar B. and Ramchandran, Kannan and Kumar, P. Vijay},
	booktitle = {2012 IEEE International Symposium on Information Theory Proceedings},
	title     = {Regenerating codes for errors and erasures in distributed storage},
	year      = {2012},
	volume    = {},
	number    = {},
	pages     = {1202-1206},
	keywords  = {Maintenance engineering;Symmetric matrices;Encoding;Network coding;Bandwidth;Security;Decoding},
	doi       = {10.1109/ISIT.2012.6283046}
}

@manual{dragonflydb_docs,
	title  = {DragonflyDB Documentation},
	author = {{DragonflyDB Developers}},
	year   = {2024},
	url    = {https://www.dragonflydb.io/docs},
	note   = {Accessed: 2025-01-02}
}

@manual{redis_docs,
	title  = {Redis Documentation},
	author = {{Redis Developers}},
	year   = {2024},
	url    = {https://redis.io/docs/latest/},
	note   = {Accessed: 2025-01-02}
}

@manual{cassandra_docs,
	title  = {Cassandra Documentation},
	author = {{Apache Foundation}},
	year   = {2025},
	url    = {https://cassandra.apache.org/doc/latest/},
	note   = {Accessed: 2025-01-02}
}

@manual{scylladb_docs,
	title  = {ScyllaDB Documentation},
	author = {ScyllaDB},
	year   = {2025},
	url    = {https://docs.scylladb.com/stable/},
	note   = {Accessed: 2025-01-02}
}

@manual{rocksdb_docs,
	title  = {RocksDB Documentation},
	author = {Facebook},
	year   = {2022},
	url    = {https://rocksdb.org/docs/getting-started.html},
	note   = {Accessed: 2025-01-02}
}

@manual{leveldb_docs,
	title  = {LevelDB Documentation},
	author = {Google},
	year   = {2020},
	url    = {https://github.com/google/leveldb/blob/main/doc/index.md},
	note   = {Accessed: 2025-01-02}
}

@manual{mongodb_docs,
	title  = {MongoDB Documentation},
	author = {MongoDB},
	year   = {2024},
	url    = {https://www.mongodb.com/docs/},
	note   = {Accessed: 2025-01-02}
}

@manual{dynamodb_docs,
	author = {Amazon Web Services},
	title  = {Amazon DynamoDB Documentation},
	year   = {2025},
	url    = {https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/},
	note   = {Accessed: 2025-07-03}
}

@manual{aws_keyvalue_docs,
	title  = {Key-Value Databases on AWS},
	author = {{Amazon Web Services}},
	year   = {2025},
	url    = {https://aws.amazon.com/nosql/key-value/#topic-1},
	note   = {Accessed: 2025-07-03}
}

@misc{moka_rs_github,
	title        = {Moka: A high performance concurrent caching library for Rust},
	author       = {Moka Contributors},
	year         = {2025},
	howpublished = {https://github.com/moka-rs/moka},
	note         = {Accessed: 2025-07-03}
}

@book{coulouris2012distributed,
	author = {Coulouris, George and Dollimore, J. and Kindberg, T.},
	year   = {2012},
	title  = {Distributed Systems. Concepts and Design. 5th edition.},
	isbn   = {978-0-13-214301-1}
}

@article{lamport1998part,
	author    = {Leslie Lamport},
	title     = {The Part-Time Parliament},
	journal   = {ACM Transactions on Computer Systems (TOCS)},
	volume    = {16},
	number    = {2},
	pages     = {133--169},
	year      = {1998},
	publisher = {ACM}
}

@inproceedings{ongaro2014search,
	author    = {Diego Ongaro and John Ousterhout},
	title     = {In Search of an Understandable Consensus Algorithm},
	booktitle = {2014 USENIX Annual Technical Conference (USENIX ATC 14)},
	pages     = {305--319},
	year      = {2014}
}

@inproceedings{junqueira2011zab,
	author       = {Flavio P. Junqueira and Benjamin C. Reed and Marco Serafini},
	title        = {Zab: High-performance broadcast for primary-backup systems},
	booktitle    = {Proceedings of the 41st Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
	pages        = {245--256},
	year         = {2011},
	organization = {IEEE}
}

@inproceedings{mu2014paxos,
	author    = {Mu, Shuai and Chen, Kang and Wu, Yongwei and Zheng, Weimin},
	title     = {When paxos meets erasure code: reduce network and storage cost in state machine replication},
	year      = {2014},
	isbn      = {9781450327497},
	publisher = {Association for Computing Machinery},
	address   = {New York, NY, USA},
	url       = {https://doi.org/10.1145/2600212.2600218},
	doi       = {10.1145/2600212.2600218},
	abstract  = {Paxos-based state machine replication is a key technique to build highly reliable and available distributed services, such as lock servers, databases and other data storage systems. Paxos can tolerate any minority number of node crashes in an asynchronous network environment. Traditionally, Paxos is used to perform a full copy replication across all participants. However, full copy is expensive both in term of network and storage cost, especially in wide area with commodity hard drives.In this paper, we discussed the non-triviality and feasibility of combining erasure code into Paxos protocol, and presented an improved protocol named RS-Paxos (Reed Solomon Paxos). To the best of our knowledge, we are the first to propose such a combination. Compared to Paxos, RS-Paxos requires a limitation on the number of possible failures. If the number of tolerated failures decreases by 1, RS-Paxos can save over 50\% of network transmission and disk I/O. To demonstrate the benefits of our protocol, we designed and built a key-value store based on RS-Paxos, and evaluated it on EC2 with various settings. Experiment results show that RS-Paxos achieves at most 2.5x improvement on write throughput and as much as 30\% reduction on latency, in common configurations.},
	booktitle = {Proceedings of the 23rd International Symposium on High-Performance Parallel and Distributed Computing},
	pages     = {61â€“72},
	numpages  = {12},
	keywords  = {state machine replication, paxos, erasure code, consensus, asynchronous message passing model},
	location  = {Vancouver, BC, Canada},
	series    = {HPDC '14}
}

@inproceedings{wang2020craft,
	author    = {Zizhong Wang and Tongliang Li and Haixia Wang and Airan Shao and Yunren Bai and Shangming Cai and Zihan Xu and Dongsheng Wang},
	title     = {{CRaft}: An Erasure-coding-supported Version of Raft for Reducing Storage Cost and Network Cost},
	booktitle = {18th USENIX Conference on File and Storage Technologies (FAST 20)},
	year      = {2020},
	isbn      = {978-1-939133-12-0},
	address   = {Santa Clara, CA},
	pages     = {297--308},
	url       = {https://www.usenix.org/conference/fast20/presentation/wang-zizhong},
	publisher = {USENIX Association},
	month     = feb
}

@inproceedings{ng2023omni,
	author    = {Ng, Harald and Haridi, Seif and Carbone, Paris},
	title     = {Omni-Paxos: Breaking the Barriers of Partial Connectivity},
	year      = {2023},
	isbn      = {9781450394871},
	publisher = {Association for Computing Machinery},
	address   = {New York, NY, USA},
	url       = {https://doi.org/10.1145/3552326.3587441},
	doi       = {10.1145/3552326.3587441},
	abstract  = {Omni-Paxos is a system for state machine replication that is completely resilient to partial network partitions, a major source of service disruptions in recent years. Omni-Paxos achieves its resilience through a decoupled design that separates the execution and state of leader election from log replication. The leader election builds on the concept of quorum-connected servers, with the sole focus on connectivity. Additionally, by decoupling reconfiguration from log replication, Omni-Paxos provides flexible and parallel log migration that improves the performance and robustness of reconfiguration. Our evaluation showcases two benefits over state-of-the-art protocols: (1) guaranteed recovery in at most four election timeouts under extreme partial network partitions, and (2) up to 8x shorter reconfiguration periods with 46\% less I/O at the leader.},
	booktitle = {Proceedings of the Eighteenth European Conference on Computer Systems},
	pages     = {314â€“330},
	numpages  = {17},
	keywords  = {reconfiguration, partial connectivity, state machine replication, consensus},
	location  = {Rome, Italy},
	series    = {EuroSys '23}
}

@misc{ookla2025speedtest,
	title        = {Speedtest Global Index},
	author       = {Ookla},
	year         = {2025},
	howpublished = {https://www.speedtest.net/global-index},
	note         = {Accessed: 2025-07-17}
}

@misc{ajiw2025distkv,
	title        = {DistKV-Erasure-Coding: A distributed key-value store with erasure coding support},
	author       = {Muhamad Aji Wibowo},
	year         = {2025},
	howpublished = {https://github.com/MuhamadAjiW/DistKV-Erasure-Coding},
	note         = {Accessed: 2025-07-17}
}

@techreport{plank1996tutorial,
	author       = {J. S. Plank},
	title        = {A Tutorial on Reed-Solomon Coding for Fault-Tolerance in RAID-like Systems},
	institution  = {University of Tennessee},
	year         = {1996},
	month        = {July},
	number       = {CS-96-332},
	howpublished = {\url{http://web.eecs.utk.edu/~jplank/plank/papers/CS-96-332.html}}
}